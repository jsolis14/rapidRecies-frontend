[{"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/index.tsx":"1","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/reportWebVitals.ts":"2","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/App.tsx":"3","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/Home/Home.tsx":"4","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Login.tsx":"5","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Register.tsx":"6"},{"size":787,"mtime":1610470797439,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1607982647474,"results":"9","hashOfConfig":"8"},{"size":952,"mtime":1608225433877,"results":"10","hashOfConfig":"8"},{"size":201,"mtime":1608225375167,"results":"11","hashOfConfig":"8"},{"size":1413,"mtime":1610473000409,"results":"12","hashOfConfig":"8"},{"size":1794,"mtime":1608230194387,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bmsm8w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/index.tsx",[],["30","31"],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/reportWebVitals.ts",[],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/App.tsx",["32","33"],"import { useQuery, gql } from '@apollo/client';\nimport React from 'react'\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Home } from './components/Home/Home';\nimport { Login } from './components/user/Login';\nimport { Register } from './components/user/Register';\n\nconst HELLO = gql`\n  query {\n    hello(name:\"Jesse\")\n  }\n`\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <header>\n          <div>\n            <Link to=\"/login\">Login</Link>\n          </div>\n          <div>\n            <Link to=\"/register\">Register</Link>\n          </div>\n          <div>\n            <Link to=\"/\">Home</Link>\n          </div>\n        </header>\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/Home/Home.tsx",["34"],"import React from 'react';\nimport { Link } from 'react-router-dom'\ninterface Props {\n\n}\n\nexport const Home: React.FC<Props> = () => {\n    return (\n        <div>\n            Home\n        </div>\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Login.tsx",["35"],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Register.tsx",["36"],"import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Props {\n\n}\n\nconst REGISTER = gql`\nmutation Register($email: String!, $password: String!, $firstName: String!, $lastName: String!){\n\tregister(email: $email, password: $password, firstName: $firstName, lastName: $lastName){\n    user{\n      id\n      email\n    }\n  }\n}\n`\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [register, { data }] = useMutation(REGISTER)\n\n    async function submitForm(e: React.FormEvent<HTMLFormElement>, mutation: any, variables: any) {\n        e.preventDefault()\n        const res = await mutation(variables)\n        history.push('/')\n        console.log(res)\n    }\n\n    return (\n        <div>\n            <form onSubmit={e => submitForm(e, register, { variables: { email, password, firstName, lastName } })}>\n                <input value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                <input value={password} type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n                <input value={firstName} placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} />\n                <input value={lastName} placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <div>\n                {data ? data.register.user.email : 'mutation not made yet'}\n            </div>\n        </div>\n\n\n    )\n}\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":18},{"ruleId":"41","severity":1,"message":"45","line":8,"column":7,"nodeType":"43","messageId":"44","endLine":8,"endColumn":12},{"ruleId":"41","severity":1,"message":"46","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"47","line":23,"column":21,"nodeType":"43","messageId":"44","endLine":23,"endColumn":25},{"ruleId":"41","severity":1,"message":"48","line":5,"column":11,"nodeType":"43","messageId":"44","endLine":5,"endColumn":16},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'HELLO' is assigned a value but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.","'Props' is defined but never used.","no-global-assign","no-unsafe-negation"]