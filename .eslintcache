[{"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/index.tsx":"1","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/reportWebVitals.ts":"2","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/App.tsx":"3","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/Home/Home.tsx":"4","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Login.tsx":"5","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Register.tsx":"6","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/TestAuth.tsx":"7","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/NavBar/NavBar.tsx":"8","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/NavBar/AccountButton.tsx":"9","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/utils/Error.tsx":"10"},{"size":2187,"mtime":1611263487945,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1607982647474,"results":"13","hashOfConfig":"12"},{"size":906,"mtime":1611269143115,"results":"14","hashOfConfig":"12"},{"size":201,"mtime":1608225375167,"results":"15","hashOfConfig":"12"},{"size":1727,"mtime":1611270745675,"results":"16","hashOfConfig":"12"},{"size":1794,"mtime":1608230194387,"results":"17","hashOfConfig":"12"},{"size":573,"mtime":1610476988399,"results":"18","hashOfConfig":"12"},{"size":1769,"mtime":1611268641825,"results":"19","hashOfConfig":"12"},{"size":2138,"mtime":1611268442055,"results":"20","hashOfConfig":"12"},{"size":140,"mtime":1611269585435,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"bmsm8w",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/index.tsx",["49"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { ApolloProvider } from '@apollo/client';\nimport jwt_decode, { JwtDecodeOptions } from \"jwt-decode\";\n\n\ninterface JWTDecode {\n  exp: number,\n  iat: number,\n  userId: String\n}\n\nfunction isTokenValid(token: string): boolean {\n\n  try {\n    const { exp }: JWTDecode = jwt_decode(token)\n    if (Date.now() >= exp * 1000) {\n      return false\n    }\n  } catch {\n    return false\n  }\n\n  return true\n}\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  credentials: 'include'\n});\n\nconst authLink = setContext(async (_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  let token = localStorage.getItem('accessToken');\n  // return the headers to the context so httpLink can read them\n\n  // try refresh token if no access token\n  if (token) {\n    if (!isTokenValid(token)) {\n      console.log('token is expired')\n      // try the refresh token\n      const res = await fetch('http://localhost:4000/refresh_token', { method: 'POST', credentials: 'include' })\n      const { ok, accessToken } = await res.json()\n\n      if (ok) {\n        token = accessToken\n        localStorage.setItem('accessToken', accessToken)\n      } else {\n        token = ''\n        localStorage.setItem('accessToken', '')\n\n      }\n    }\n\n\n  }\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  credentials: 'include'\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["50","51"],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/reportWebVitals.ts",[],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/App.tsx",["52","53","54"],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/Home/Home.tsx",["55"],"import React from 'react';\nimport { Link } from 'react-router-dom'\ninterface Props {\n\n}\n\nexport const Home: React.FC<Props> = () => {\n    return (\n        <div>\n            Home\n        </div>\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Login.tsx",[],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Register.tsx",["56"],"import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Props {\n\n}\n\nconst REGISTER = gql`\nmutation Register($email: String!, $password: String!, $firstName: String!, $lastName: String!){\n\tregister(email: $email, password: $password, firstName: $firstName, lastName: $lastName){\n    user{\n      id\n      email\n    }\n  }\n}\n`\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [register, { data }] = useMutation(REGISTER)\n\n    async function submitForm(e: React.FormEvent<HTMLFormElement>, mutation: any, variables: any) {\n        e.preventDefault()\n        const res = await mutation(variables)\n        history.push('/')\n        console.log(res)\n    }\n\n    return (\n        <div>\n            <form onSubmit={e => submitForm(e, register, { variables: { email, password, firstName, lastName } })}>\n                <input value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                <input value={password} type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n                <input value={firstName} placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} />\n                <input value={lastName} placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <div>\n                {data ? data.register.user.email : 'mutation not made yet'}\n            </div>\n        </div>\n\n\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/TestAuth.tsx",["57"],"import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\nconst TEST_ACCESS = gql`\n  query TestAccess{\n      testAccess\n  }\n`;\n\nexport const TestAuth: React.FC<RouteComponentProps> = () => {\n    const { loading, error, data } = useQuery(TEST_ACCESS);\n\n    if (loading) {\n        return (<div>Loading...</div>)\n    }\n    if (error) {\n        console.log(error)\n        return (<div>\n            error\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            done\n        </div>\n\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/NavBar/NavBar.tsx",["58"],"import React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AccountButton } from './AccountButton';\nimport { RouteComponentProps } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nexport const NavBar = (props: RouteComponentProps<{}>) => {\n    const classes = useStyles();\n    const [isAuth, setIsAuth] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (localStorage.getItem('accessToken')) {\n            setIsAuth(true)\n        } else {\n            setIsAuth(false)\n        }\n    })\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        App Title\n                    </Typography>\n                    {isAuth ? <AccountButton {...props} /> : <Button color=\"inherit\" onClick={() => props.history.push('login')}>Login</Button>}\n\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/NavBar/AccountButton.tsx",["59"],"import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nexport const AccountButton: React.FC<RouteComponentProps> = ({ history }) => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n    const open = (anchorEl !== null);\n\n\n    function handleMenu(event: React.MouseEvent<HTMLElement>): void {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose(): void {\n        setAnchorEl(null)\n    }\n\n    function logout() {\n        localStorage.removeItem('accessToken')\n        history.push('/')\n        setAnchorEl(null)\n    }\n    return (\n        <div>\n            <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={logout}>Logout</MenuItem>\n            </Menu>\n        </div>\n\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/utils/Error.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":8,"column":22,"nodeType":"62","messageId":"63","endLine":8,"endColumn":38},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"60","severity":1,"message":"68","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":18},{"ruleId":"60","severity":1,"message":"69","line":3,"column":40,"nodeType":"62","messageId":"63","endLine":3,"endColumn":44},{"ruleId":"60","severity":1,"message":"70","line":9,"column":7,"nodeType":"62","messageId":"63","endLine":9,"endColumn":12},{"ruleId":"60","severity":1,"message":"69","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"71","line":5,"column":11,"nodeType":"62","messageId":"63","endLine":5,"endColumn":16},{"ruleId":"60","severity":1,"message":"72","line":11,"column":29,"nodeType":"62","messageId":"63","endLine":11,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":31,"column":5,"nodeType":"62","endLine":31,"endColumn":14,"suggestions":"75"},{"ruleId":"60","severity":1,"message":"76","line":24,"column":11,"nodeType":"62","messageId":"63","endLine":24,"endColumn":18},"@typescript-eslint/no-unused-vars","'JwtDecodeOptions' is defined but never used.","Identifier","unusedVar","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"'useQuery' is defined but never used.","'Link' is defined but never used.","'HELLO' is assigned a value but never used.","'Props' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsAuth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["79"],"'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Add dependencies array: []",{"range":"82","text":"83"},[1108,1108],", []"]