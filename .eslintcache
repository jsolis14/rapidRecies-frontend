[{"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/index.tsx":"1","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/reportWebVitals.ts":"2","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/App.tsx":"3","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/Home/Home.tsx":"4","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Login.tsx":"5","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Register.tsx":"6","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/TestAuth.tsx":"7"},{"size":2218,"mtime":1610486954059,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607982647474,"results":"10","hashOfConfig":"9"},{"size":1143,"mtime":1610477035519,"results":"11","hashOfConfig":"9"},{"size":201,"mtime":1608225375167,"results":"12","hashOfConfig":"9"},{"size":1531,"mtime":1610473861749,"results":"13","hashOfConfig":"9"},{"size":1794,"mtime":1608230194387,"results":"14","hashOfConfig":"9"},{"size":573,"mtime":1610476988399,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bmsm8w",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/index.tsx",["36","37"],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/reportWebVitals.ts",[],["38","39"],"/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/App.tsx",["40","41"],"import { useQuery, gql } from '@apollo/client';\nimport React from 'react'\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Home } from './components/Home/Home';\nimport { Login } from './components/user/Login';\nimport { Register } from './components/user/Register';\nimport { TestAuth } from './components/user/TestAuth';\n\nconst HELLO = gql`\n  query {\n    hello(name:\"Jesse\")\n  }\n`\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <header>\n          <div>\n            <Link to=\"/login\">Login</Link>\n          </div>\n          <div>\n            <Link to=\"/register\">Register</Link>\n          </div>\n          <div>\n            <Link to=\"/\">Home</Link>\n          </div>\n          <div>\n            <Link to='test'>Test Auth</Link>\n          </div>\n        </header>\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/test\" component={TestAuth} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/Home/Home.tsx",["42"],"import React from 'react';\nimport { Link } from 'react-router-dom'\ninterface Props {\n\n}\n\nexport const Home: React.FC<Props> = () => {\n    return (\n        <div>\n            Home\n        </div>\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Login.tsx",["43"],"import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\n\nconst LOGIN = gql`\nmutation Login($email: String!, $password: String!){\n    login(email: $email, password:$password){\n      acessToken\n      user{\n        email\n      }\n      errors{\n        path\n        message\n      }\n    }\n  }\n`\n\nexport const Login: React.FC<RouteComponentProps> = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [login, { data }] = useMutation(LOGIN)\n\n    async function submitForm(e: React.FormEvent<HTMLFormElement>, mutation: any, variables: any) {\n        e.preventDefault()\n        const res = await mutation(variables)\n\n        if (res && res.data) {\n            localStorage.setItem('accessToken', res.data.login.acessToken)\n        }\n\n        history.push('/')\n        console.log(res)\n    }\n    return (\n        <div>\n            <form onSubmit={e => submitForm(e, login, { variables: { email, password } })}>\n                <div>\n                    <input value={email} onChange={e => setEmail(e.target.value)} type='email' placeholder='email' />\n                </div>\n                <div>\n                    <input value={password} onChange={e => setPassword(e.target.value)} type='password' placeholder='password' />\n                </div>\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/Register.tsx",["44"],"import React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Props {\n\n}\n\nconst REGISTER = gql`\nmutation Register($email: String!, $password: String!, $firstName: String!, $lastName: String!){\n\tregister(email: $email, password: $password, firstName: $firstName, lastName: $lastName){\n    user{\n      id\n      email\n    }\n  }\n}\n`\nexport const Register: React.FC<RouteComponentProps> = ({ history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [register, { data }] = useMutation(REGISTER)\n\n    async function submitForm(e: React.FormEvent<HTMLFormElement>, mutation: any, variables: any) {\n        e.preventDefault()\n        const res = await mutation(variables)\n        history.push('/')\n        console.log(res)\n    }\n\n    return (\n        <div>\n            <form onSubmit={e => submitForm(e, register, { variables: { email, password, firstName, lastName } })}>\n                <input value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                <input value={password} type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n                <input value={firstName} placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} />\n                <input value={lastName} placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <div>\n                {data ? data.register.user.email : 'mutation not made yet'}\n            </div>\n        </div>\n\n\n    )\n}\n","/home/jesse14/Desktop/rapid-recipes/rapid-recipes-frontend/src/components/user/TestAuth.tsx",["45"],"import React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { RouteComponentProps } from 'react-router-dom';\nconst TEST_ACCESS = gql`\n  query TestAccess{\n      testAccess\n  }\n`;\n\nexport const TestAuth: React.FC<RouteComponentProps> = () => {\n    const { loading, error, data } = useQuery(TEST_ACCESS);\n\n    if (loading) {\n        return (<div>Loading...</div>)\n    }\n    if (error) {\n        console.log(error)\n        return (<div>\n            error\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            done\n        </div>\n\n    )\n}\n",{"ruleId":"46","severity":1,"message":"47","line":8,"column":22,"nodeType":"48","messageId":"49","endLine":8,"endColumn":38},{"ruleId":"46","severity":1,"message":"50","line":9,"column":10,"nodeType":"48","messageId":"49","endLine":9,"endColumn":19},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"46","severity":1,"message":"55","line":1,"column":10,"nodeType":"48","messageId":"49","endLine":1,"endColumn":18},{"ruleId":"46","severity":1,"message":"56","line":9,"column":7,"nodeType":"48","messageId":"49","endLine":9,"endColumn":12},{"ruleId":"46","severity":1,"message":"57","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":14},{"ruleId":"46","severity":1,"message":"58","line":23,"column":21,"nodeType":"48","messageId":"49","endLine":23,"endColumn":25},{"ruleId":"46","severity":1,"message":"59","line":5,"column":11,"nodeType":"48","messageId":"49","endLine":5,"endColumn":16},{"ruleId":"46","severity":1,"message":"58","line":11,"column":29,"nodeType":"48","messageId":"49","endLine":11,"endColumn":33},"@typescript-eslint/no-unused-vars","'JwtDecodeOptions' is defined but never used.","Identifier","unusedVar","'rmdirSync' is defined but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'useQuery' is defined but never used.","'HELLO' is assigned a value but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.","'Props' is defined but never used.","no-global-assign","no-unsafe-negation"]